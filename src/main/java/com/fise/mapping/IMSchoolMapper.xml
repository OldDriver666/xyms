<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fise.dao.IMSchoolMapper">
  <resultMap id="BaseResultMap" type="com.fise.model.entity.IMSchool">
    <id column="schoolId" jdbcType="INTEGER" property="schoolid" />
    <result column="schoolName" jdbcType="VARCHAR" property="schoolname" />
    <result column="districtId" jdbcType="INTEGER" property="districtid" />
    <result column="schoolAddr" jdbcType="VARCHAR" property="schooladdr" />
    <result column="updated" jdbcType="INTEGER" property="updated" />
    <result column="created" jdbcType="INTEGER" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    schoolId, schoolName, districtId, schoolAddr, updated, created
  </sql>
  <select id="selectByExample" parameterType="com.fise.model.entity.IMSchoolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from IMSchool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from IMSchool
    where schoolId = #{schoolid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from IMSchool
    where schoolId = #{schoolid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fise.model.entity.IMSchoolExample">
    delete from IMSchool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fise.model.entity.IMSchool">
    insert into IMSchool (schoolId, schoolName, districtId, 
      schoolAddr, updated, created
      )
    values (#{schoolid,jdbcType=INTEGER}, #{schoolname,jdbcType=VARCHAR}, #{districtid,jdbcType=INTEGER}, 
      #{schooladdr,jdbcType=VARCHAR}, #{updated,jdbcType=INTEGER}, #{created,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fise.model.entity.IMSchool">
    insert into IMSchool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="schoolid != null">
        schoolId,
      </if>
      <if test="schoolname != null">
        schoolName,
      </if>
      <if test="districtid != null">
        districtId,
      </if>
      <if test="schooladdr != null">
        schoolAddr,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="schoolid != null">
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="schoolname != null">
        #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="districtid != null">
        #{districtid,jdbcType=INTEGER},
      </if>
      <if test="schooladdr != null">
        #{schooladdr,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fise.model.entity.IMSchoolExample" resultType="java.lang.Long">
    select count(*) from IMSchool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update IMSchool
    <set>
      <if test="record.schoolid != null">
        schoolId = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolname != null">
        schoolName = #{record.schoolname,jdbcType=VARCHAR},
      </if>
      <if test="record.districtid != null">
        districtId = #{record.districtid,jdbcType=INTEGER},
      </if>
      <if test="record.schooladdr != null">
        schoolAddr = #{record.schooladdr,jdbcType=VARCHAR},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update IMSchool
    set schoolId = #{record.schoolid,jdbcType=INTEGER},
      schoolName = #{record.schoolname,jdbcType=VARCHAR},
      districtId = #{record.districtid,jdbcType=INTEGER},
      schoolAddr = #{record.schooladdr,jdbcType=VARCHAR},
      updated = #{record.updated,jdbcType=INTEGER},
      created = #{record.created,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fise.model.entity.IMSchool">
    update IMSchool
    <set>
      <if test="schoolname != null">
        schoolName = #{schoolname,jdbcType=VARCHAR},
      </if>
      <if test="districtid != null">
        districtId = #{districtid,jdbcType=INTEGER},
      </if>
      <if test="schooladdr != null">
        schoolAddr = #{schooladdr,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=INTEGER},
      </if>
    </set>
    where schoolId = #{schoolid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fise.model.entity.IMSchool">
    update IMSchool
    set schoolName = #{schoolname,jdbcType=VARCHAR},
      districtId = #{districtid,jdbcType=INTEGER},
      schoolAddr = #{schooladdr,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=INTEGER},
      created = #{created,jdbcType=INTEGER}
    where schoolId = #{schoolid,jdbcType=INTEGER}
  </update>
</mapper>